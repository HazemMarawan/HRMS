@{
    ViewBag.Title = "History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal fade" id="manage_vacation_request_modal" tabindex="-1" role="dialog" aria-hidden="true">
    <form action="" method="post" enctype='multipart/form-data'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal_title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-body">
                        <div class="form-row">
                            <input type="hidden" name="id" id="id" value="0" />
                            <div class="form-group col-md-12">
                                <label>Vacation Type</label>
                                @Html.DropDownList("vacation_type_id", new SelectList(ViewBag.VacationTypes, "id", "name"), "Select Vacation Type", new { @class = "form-control", @name = "vacation_type_id", @style = "width:100%", @id = "vacation_type_id", @required = "required" })
                            </div>
                            <div class="form-group col-md-6">
                                <label>From</label>
                                <input required name="vacation_from" id="vacation_from" type="date" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-6">
                                <label>To</label>
                                <input required name="vacation_to" id="vacation_to" type="date" class="form-control radius-30" />
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </form>
</div>


<div class="row">
    <div class="form-group col-4">
        <input class="form-control" type="text" id="text_search" name="text_search" placeholder="Search">
    </div>
    <div class="form-group col-2">
        <button id="search" class="btn btn-primary px-3 radius-30">Search</button>
    </div>
    <div class="form-group col-2">
        <button id="reset" class="btn btn-danger px-3 radius-30">Reset</button>
    </div>

</div>

<div class="card">
    <div class="card-header">
        <a style="color:blue;" href="@Url.Action("Index","VacationRequest")"><i class="fas fa-home"></i></a> @ViewBag.year <span>Vacations</span>

    </div>
    <div class="card-body">

        <div class="table-responsive">
            <table id="vacationHistoryTable" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Date</th>
                        <th>Days</th>
                        <th>Status</th>
                        <th>Active</th>
                        <th></th>
                    </tr>
                </thead>

            </table>
        </div>
    </div>
</div>

@section scripts
{
    <script>
       $(document).ready(function () {

           var datatable = $('#vacationHistoryTable')
               .DataTable({/* we added this from the other system to have same search and same pagination*/
                   "dom": "<'dt--top-section '<'row'<'col-sm-12 col-md-6 d-flex justify-content-md-start justify-content-center'B><'col-sm-12 col-md-6 d-flex justify-content-md-end justify-content-center mt-md-0 mt-3'f>>>" +
                       "<'table-responsive  'tr>" +
                       "<'dt--bottom-section d-sm-flex justify-content-sm-between text-center'<'dt--pages-count  mb-sm-0 mb-3'i><'dt--pagination'p>>",
                   "buttons": {
                       buttons: [
                           { extend: 'copy', className: 'btn btn-sm' },
                           { extend: 'csv', className: 'btn btn-sm' },
                           { extend: 'excel', className: 'btn btn-sm' },
                           { extend: 'print', className: 'btn btn-sm' }
                       ]
                   },
                   "oLanguage": {
                       "oPaginate": { "sPrevious": 'Perivous', "sNext": 'Next' },
                       "sInfo": "Showing page _PAGE_ of _PAGES_",
                       "sSearch": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>',
                       "sSearchPlaceholder": "Search...",
                       "sLengthMenu": "Results :  _MENU_",
                   },
                    "processing": true,
                    "serverSide": true,
                    "scrollX": true,
                    "stateSave": false,
                    "lengthChange": false,
                    "dom": 'Bfrtip',

                    "buttons": ['copy', 'excel', 'pdf', 'print'],
                    "pageLength":10,
                    "rowId": 'id',
                    "ajax": {
                        "url": "@Url.Action("History", "VacationRequest")?year=@ViewBag.year",
                        "type": "POST",
                        "datatype": "json",
                        "dataSrc": "data"
                    },
                    "columns": [
                        {
                            "data": "id",
                            "searchable": true
                        },
                        {
                            "data": "vacation_name",
                            "searchable": true
                        },
                        {
                            "data": "vacation_from", "seisAarchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";
                                if (oData.vacation_from)
                                    html += "<b>From: </b>" + fixDate(oData.vacation_from) + "<br>";
                                else
                                    html += "<b>From: </b>-<br>";
                                if (oData.vacation_to)
                                    html += "<b>To: </b>" + fixDate(oData.vacation_to) + "<br>";
                                else
                                    html += "<b>To: </b>-<br>";
                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                        {
                            "data": "days",
                            "searchable": true
                        },
                        {
                            "data": "status", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";
                                var isBranchAdmin = '@HRMS.Auth.isA.BranchAdmin()';
                                var isTeamLeader = '@HRMS.Auth.isA.TeamLeader()';
                                var isEmployee = '@HRMS.Auth.isA.Employee()';

                                if (oData.status == 1)
                                    html = "<span class='badge badge-info'>Pending Team Leader Approval</span>";
                                else if (oData.status == 2)
                                    html = "<span class='badge badge-warning'>Pending Supervisor Approval</span>";
                                else if (oData.status == 6)
                                    html = "<span class='badge badge-primary'>Pending HR Approval</span>";
                                else if (oData.status == 3)
                                    html = "<span class='badge badge-primary'>Pending Executive Director Approval</span>";
                                else if (oData.status == 4)
                                    html = "<span class='badge badge-success'>Approved</span>";
                                else if (oData.status == 5)
                                    html = "<span class='badge badge-danger'>Rejected</span>";

                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                         {
                            "data": "active", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";
                                if (oData.active == 1)
                                    html += "<span class='badge badge-primary'>Active</span>";
                                else
                                    html += "<span class='badge badge-danger'>Not Active</span>";
                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                        {
                            "data": "id", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";
                                var isBranchAdmin = '@HRMS.Auth.isA.BranchAdmin()';
                                var isTeamLeader = '@HRMS.Auth.isA.TeamLeader()';
                                var isEmployee = '@HRMS.Auth.isA.Employee()';
                                var isSupervisor = '@HRMS.Auth.isA.Supervisor()';

                                if ('@ViewBag.year' == '@ViewBag.currentYear') {
                                    if ((isBranchAdmin == "True" && oData.status == 3) || (isTeamLeader == "True" && oData.status == 2) || (isEmployee == "True" && oData.status == 1) || (isSupervisor == "True" && oData.status == 6)) {
                                        html += "<a class='edit' href='javascript:void(0)' title='Edit'><i class='far fa-edit'></i></a>&nbsp;";
                                        html += "<a class='delete' href='javascript:void(0)' title='Delete'><i class='fas fa-trash'></i></a>&nbsp;";
                                    }
                                }



                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                    ]
                 });

            $('#search').on('click', function () {
                datatable.search($("#text_search").val());
                datatable.draw();
            });

            $('#text_search').on('keyup', function (e) {
                if (e.keyCode == 13)
                    $('#search_button').trigger('click');
            });

            $('#reset').on('click', function () {
                $("#text_search").val("");

                $('#search').trigger('click');

            });

            $(document).on("click", ".edit", function () {
                var data = datatable.row($(this).closest('tr')).data();
                var modal = $('#manage_vacation_request_modal').clone();
                var action = '@Url.Action("saveVacationRequest", "VacationRequest")';
                modal.find('form').attr('action', action);
                modal.find('#modal_title').text('Edit Vacation');
                modal.execModal({
                    progressBar: 'progress_bar',
                    progressText: 'progress_text',
                }, function (response) {
                        if (response.success == false) {
                            Swal.fire(
                                'Sorry!',
                                response.message,
                                'error'
                            );
                        }
                        else {
                            Swal.fire(
                                'Done!',
                                "Enjoy your Vacation",
                                'success'
                            );
                            datatable.draw();
                        }

                }, function (response) {

                }, function (dialog) {

                        dialog.find('#id').val(data.id);
                        dialog.find('#vacation_type_id option[value=' + data.vacation_type_id + ']').attr('selected', 'selected');
                        dialog.find('#vacation_from').val(fixDate(data.vacation_from));
                        dialog.find('#vacation_to').val(fixDate(data.vacation_to));
                });

            });

            $(document).on("click", ".delete", function () {
                var data = datatable.row($(this).closest('tr')).data();
                warningBox("Are you sure you want to delete this Vacation (<b>" + data.vacation_name +"</b>) ?", function () {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("deleteVacationRequest", "VacationRequest")',
                        contentType: "application/json; charset=utf-8",
                        data: { "id": data.id },
                        datatype: "json",
                        success: function (data) {
                            datatable.draw();
                        },
                        error: function () {
                            alert("Dynamic content load failed.");
                        }
                    });
                });
            });



        });

    </script>
}

