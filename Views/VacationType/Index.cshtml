@{
    ViewBag.Title = "Vacation Types";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal fade" id="manage_vacation_type_modal" tabindex="-1" role="dialog" aria-hidden="true">
    <form action="" method="post" enctype='multipart/form-data'>
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal_title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-body">
                        <div class="form-row">
                            <input type="hidden" name="id" id="id" value="0" />
                            <div class="form-group col-md-12">
                                <label>Name</label>
                                <input required name="name" id="name" type="text" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-12">
                                <label>Must Inform Before Duration</label>
                                <input name="must_inform_before_duration" id="must_inform_before_duration" value="1" type="checkbox" class="radius-30" />
                            </div>
                            <div class="form-group col-md-12" style="display:none;" id="inform_before_duration_min_range_div">
                                <label>Min Range</label>
                                <input name="inform_before_duration_min_range" id="inform_before_duration_min_range" type="number" min="1" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-6" style="display:none;" id="inform_before_duration_measurement_div">
                                <label>Measurement 1</label>
                                <select name="inform_before_duration_measurement" id="inform_before_duration_measurement" class="form-control">
                                    <option value="">Select Measurement</option>
                                    <option value="1">Days</option>
                                    <option value="2">Hours</option>
                                </select>
                            </div>
                            <div class="form-group col-md-6" style="display:none;" id="inform_before_duration_div">
                                <label>Duration 1</label>
                                <input name="inform_before_duration" id="inform_before_duration" type="number" min="1" class="form-control radius-30" />
                            </div>

                            <div class="form-group col-md-6" style="display:none;" id="inform_before_duration_measurement_2_div">
                                <label>Measurement 2</label>
                                <select name="inform_before_duration_measurement_2" id="inform_before_duration_measurement_2" class="form-control">
                                    <option value="">Select Measurement</option>
                                    <option value="1">Days</option>
                                    <option value="2">Hours</option>
                                </select>
                            </div>
                            <div class="form-group col-md-6" style="display:none;" id="inform_before_duration_2_div">
                                <label>Duration 2</label>
                                <input name="inform_before_duration_2" id="inform_before_duration_2" type="number" min="1" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-6">
                                <label>Need Approve</label>
                                <input name="need_approve" id="need_approve" value="1" type="checkbox" class="radius-30" />
                            </div>
                            <div class="form-group col-md-12">
                                <label>Closed At Specific Time</label>
                                <input name="closed_at_specific_time" id="closed_at_specific_time" value="1" type="checkbox" class="radius-30" />
                            </div>
                            <div class="form-group col-md-6" style="display:none;" id="closed_at_div">
                                <label>Closed At</label>
                                <input name="closed_at" id="closed_at" type="time" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-6">
                                <label>Max Days</label>
                                <input name="max_days" id="max_days" type="number" min="1" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-12">
                                <label>Include Official Vacation</label>
                                <input name="include_official_vacation" id="include_official_vacation" value="1" type="checkbox" class="radius-30" />
                            </div>
                            <div class="form-group col-md-12">
                                <label>Status</label>
                                <select class="form-control" name="active" id="active">
                                    <option value="1">Active</option>
                                    <option value="2">Inactive</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </form>
</div>


<div class="row">
    <div class="form-group col-4">
        <input class="form-control" type="text" id="text_search" name="text_search" placeholder="Search">
    </div>
    <div class="form-group col-2">
        <button id="search" class="btn btn-primary px-3 radius-30">Search</button>
    </div>
    <div class="form-group col-2">
        <button id="reset" class="btn btn-danger px-3 radius-30">Reset</button>
    </div>

</div>

<div class="card">
    <div class="card-header">
        <a href="javascript:void(0)" id="add_vacation_type"><i class="fa fa-plus"></i> Add Vacation Type</a>
    </div>
    <div class="card-body">

        <div class="table-responsive">
            <table id="vacationTypeTable" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Info</th>
                        <th>Active</th>
                        <th>Date</th>
                        <th></th>
                    </tr>
                </thead>

            </table>
        </div>
    </div>
</div>

@section scripts
{
    <script>
       $(document).ready(function () {

           var datatable = $('#vacationTypeTable')
               .DataTable({/* we added this from the other system to have same search and same pagination*/
                   "dom": "<'dt--top-section '<'row'<'col-sm-12 col-md-6 d-flex justify-content-md-start justify-content-center'B><'col-sm-12 col-md-6 d-flex justify-content-md-end justify-content-center mt-md-0 mt-3'f>>>" +
                       "<'table-responsive  'tr>" +
                       "<'dt--bottom-section d-sm-flex justify-content-sm-between text-center'<'dt--pages-count  mb-sm-0 mb-3'i><'dt--pagination'p>>",
                   "buttons": {
                       buttons: [
                           { extend: 'copy', className: 'btn btn-sm' },
                           { extend: 'csv', className: 'btn btn-sm' },
                           { extend: 'excel', className: 'btn btn-sm' },
                           { extend: 'print', className: 'btn btn-sm' }
                       ]
                   },
                   "oLanguage": {
                       "oPaginate": { "sPrevious": 'Perivous', "sNext": 'Next' },
                       "sInfo": "Showing page _PAGE_ of _PAGES_",
                       "sSearch": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>',
                       "sSearchPlaceholder": "Search...",
                       "sLengthMenu": "Results :  _MENU_",
                   },
                    "processing": true,
                    "serverSide": true,
                    "scrollX": true,
                    "stateSave": false,
                    "lengthChange": false,
                    "dom": 'Bfrtip',

                    "buttons": ['copy', 'excel', 'pdf', 'print'],
                    "pageLength":10,
                    "rowId": 'id',
                    "ajax": {
                        "url": "@Url.Action("Index", "VacationType")",
                        "type": "POST",
                        "datatype": "json",
                        "dataSrc": "data"
                    },
                    "columns": [
                        {
                            "data": "id",
                            "searchable": true
                        },
                        {
                            "data": "name",
                            "searchable": true
                        },
                        {
                            "data": "id", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";
                                if (oData.must_inform_before_duration == 1) {

                                    if (oData.inform_before_duration_2) {
                                        html += "<b><= " + oData.inform_before_duration_min_range+" Days Need to Be Informed: </b>" + oData.inform_before_duration;
                                        if (oData.inform_before_duration_measurement == 1)
                                            html += " Days Before";
                                        else
                                            html += " Hours Before";

                                        html += "<br>";
                                    }

                                    if (oData.inform_before_duration_2) {
                                        html += "<b>&nbsp; > " + oData.inform_before_duration_min_range+" Days Need to Be Informed: </b>" + oData.inform_before_duration_2;
                                        if (oData.inform_before_duration_measurement_2 == 1)
                                            html += " Days Before";
                                        else
                                            html += " Hours Before";

                                        html += "<br>";
                                    }
                                }

                                if (oData.need_approve == 1) {
                                    html += "<b>Need Approve: </b>Yes";
                                    html += "<br>";
                                }
                               
                                if (oData.closed_at_specific_time == 1) {
                                    html += "<b>Closed at: </b>" + fixTime(oData.closed_at);
                                    html += "<br>";
                                }

                                if (oData.max_days) {
                                    html += "<b>Max Days: </b>" + oData.max_days;
                                    html += "<br>";
                                }
                                
                                if (oData.include_official_vacation == 1) {
                                    html += "<b>Include Official Vacation: </b>Yes";
                                }
                                html += "<br>";
                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                        {
                            "data": "active", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";
                                if (oData.active == 1)
                                    html += "<span class='badge badge-primary'>Active</span>";
                                else
                                    html += "<span class='badge badge-danger'>Active</span>";
                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                        {
                            "data": "created_at", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                $(nTd).html("<span class='action-column'>" + fixDate(oData.created_at) + "</span>");
                            }
                        },
                        {
                            "data": "id", "searchable": true,
                            fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
                                var html = "";

                                html += "<a class='edit' href='javascript:void(0)' title='Edit'><i class='far fa-edit'></i></a>&nbsp;";
                                html += "<a class='delete' href='javascript:void(0)' title='Delete'><i class='fas fa-trash'></i></a>";
                                $(nTd).html("<span class='action-column'>" + html + "</span>");
                            }
                        },
                    ]
                 });

            $('#search').on('click', function () {
                datatable.search($("#text_search").val());
                datatable.draw();
            });

            $('#text_search').on('keyup', function (e) {
                if (e.keyCode == 13)
                    $('#search_button').trigger('click');
            });

            $('#reset').on('click', function () {
                $("#text_search").val("");

                $('#search').trigger('click');

            });

           function dialogEvents(dialog) {
               dialog.find("#must_inform_before_duration").click(function () {
                   if (dialog.find("#must_inform_before_duration").is(":checked")) {

                       dialog.find("#inform_before_duration_div").show();
                       dialog.find("#inform_before_duration_measurement_div").show();
                       dialog.find("#inform_before_duration_min_range_div").show();

                       dialog.find("#inform_before_duration_min_range").prop('required', true);
                       dialog.find("#inform_before_duration_measurement").prop('required', true);
                       dialog.find("#inform_before_duration").prop('required', true);

                       dialog.find("#inform_before_duration_2_div").show();
                       dialog.find("#inform_before_duration_measurement_2_div").show();
                   }
                   else {
                       dialog.find("#inform_before_duration_div").hide();
                       dialog.find("#inform_before_duration_measurement_div").hide();
                       dialog.find("#inform_before_duration_min_range_div").hide();

                       dialog.find("#inform_before_duration_min_range").prop('required', false);
                       dialog.find("#inform_before_duration_measurement").prop('required', false);
                       dialog.find("#inform_before_duration").prop('required', false);

                       dialog.find("#inform_before_duration_2_div").hide();
                       dialog.find("#inform_before_duration_measurement_2_div").hide();
                   }
               });

               dialog.find("#closed_at_specific_time").click(function () {
                   if (dialog.find("#closed_at_specific_time").is(":checked")) {
                       dialog.find("#closed_at_div").show();
                   }
                   else {
                       dialog.find("#closed_at_div").hide();
                       //dialog.find("#closed_at").val("");
                   }
               });
           }

           $("#add_vacation_type").click(function () {
               var modal = $('#manage_vacation_type_modal').clone();
                var action = '@Url.Action("saveVacationType", "VacationType")';
                modal.find('form').attr('action', action);
               modal.find('#modal_title').text('Add Vacation Type');
                modal.execModal({
                    progressBar: 'progress_bar',
                    progressText: 'progress_text',
                }, function (response) {

                        datatable.draw();

                }, function (response) {

                }, function (dialog) {

                        dialogEvents(dialog);
                        
                });
            });

            $(document).on("click", ".edit", function () {
                var data = datatable.row($(this).closest('tr')).data();
                console.log(data);
                var modal = $('#manage_vacation_type_modal').clone();
                var action = '@Url.Action("saveVacationType", "VacationType")';
                modal.find('form').attr('action', action);
                modal.find('#modal_title').text('Edit Project Type');
                modal.execModal({
                    progressBar: 'progress_bar',
                    progressText: 'progress_text',
                }, function (response) {
                        datatable.draw();

                }, function (response) {

                }, function (dialog) {

                        dialog.find('#id').val(data.id);
                        dialog.find('#name').val(data.name);
                        dialog.find('#inform_before_duration').val(data.inform_before_duration);
                        dialog.find('#inform_before_duration_2').val(data.inform_before_duration_2);
                        dialog.find('#inform_before_duration_min_range').val(data.inform_before_duration_min_range);
                        dialog.find('#inform_before_duration_measurement').val(data.inform_before_duration_measurement);
                        dialog.find('#inform_before_duration_measurement_2').val(data.inform_before_duration_measurement_2);
                        dialog.find('#closed_at').val(data.closed_at);
                        dialog.find('#max_days').val(data.max_days);
                        dialog.find('#active option[value=' + data.active + ']').attr('selected', 'selected');

                        if (data.must_inform_before_duration == 1) {
                            dialog.find("#must_inform_before_duration").prop('checked', true);
                            
                            dialog.find("#inform_before_duration_div").show();
                            dialog.find("#inform_before_duration_measurement_div").show();
                            dialog.find("#inform_before_duration_min_range_div").show();

                            dialog.find("#inform_before_duration_2_div").show();
                            dialog.find("#inform_before_duration_measurement_2_div").show();
                        }

                        if (data.closed_at_specific_time == 1) {
                            dialog.find("#closed_at_specific_time").prop('checked', true);
                            dialog.find("#closed_at_div").show();

                            if (data.closed_at) {
                                dialog.find("#closed_at").val(fixTime(data.closed_at));
                            }
                        }

                        if (data.include_official_vacation == 1) {
                            dialog.find("#include_official_vacation").prop('checked', true);
                        }

                        if (data.need_approve == 1) {
                            dialog.find("#need_approve").prop('checked', true);
                        }

                        dialogEvents(dialog);

                });

            });

            $(document).on("click", ".delete", function () {
                var data = datatable.row($(this).closest('tr')).data();
                warningBox("Are you sure you want to delete this Project Type (<b>" + data.name +"</b>) ?", function () {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("deleteProjectType", "ProjectType")',
                        contentType: "application/json; charset=utf-8",
                        data: { "id": data.id },
                        datatype: "json",
                        success: function (data) {
                            datatable.draw();
                        },
                        error: function () {
                            alert("Dynamic content load failed.");
                        }
                    });
                });
            });

        });

    </script>
}

